db\:abort_if_pending_migrations=Raises an error if there are pending migrations
db\:charset=Retrieves the charset for the current environment's database
db\:collation=Retrieves the collation for the current environment's database
db\:create=Create the database defined in config/database.yml for the current RAILS_ENV
db\:create\:all=Create all the local databases defined in config/database.yml
db\:drop=Drops the database for the current RAILS_ENV
db\:drop\:all=Drops all the local databases defined in config/database.yml
db\:fixtures\:identify=Search for a fixture given a LABEL or ID.
db\:fixtures\:load=Load fixtures into the current environment's database.  Load specific fixtures using FIXTURES=x,y
db\:migrate=Migrate the database through scripts in db/migrate. Target specific version with VERSION=x. Turn off output with VERBOSE=false.
db\:migrate\:down=Runs the "down" for a given migration VERSION.
db\:migrate\:redo=Rollbacks the database one migration and re migrate up. If you want to rollback more than one step, define STEP=x
db\:migrate\:reset=Resets your database using your migrations for the current environment
db\:migrate\:up=Runs the "up" for a given migration VERSION.
db\:reset=Drops and recreates the database from db/schema.rb for the current environment.
db\:rollback=Rolls the schema back to the previous version. Specify the number of steps with STEP=n
db\:schema\:dump=Create a db/schema.rb file that can be portably used against any DB supported by AR
db\:schema\:load=Load a schema.rb file into the database
db\:sessions\:clear=Clear the sessions table
db\:sessions\:create=Creates a sessions migration for use with CGI::Session::ActiveRecordStore
db\:structure\:dump=Dump the database structure to a SQL file
db\:test\:clone=Recreate the test database from the current environment's database schema
db\:test\:clone_structure=Recreate the test databases from the development structure
db\:test\:load=Recreate the test database from the current schema.rb
db\:test\:prepare=Check for pending migrations and load the test schema
db\:test\:purge=Empty the test database
db\:version=Retrieves the current schema version number
default=
doc=
doc/api=
doc/api/index.html=
doc/app=
doc/app/index.html=
doc\:app=Build the app HTML Files
doc\:clobber=
doc\:clobber_app=Remove rdoc products
doc\:clobber_plugins=Remove plugin documentation
doc\:clobber_rails=Remove rdoc products
doc\:plugins=Generate documentation for all installed plugins
doc\:plugins\:warbler-0.9.11=
doc\:rails=Build the rails HTML Files
doc\:reapp=Force a rebuild of the RDOC files
doc\:rerails=Force a rebuild of the RDOC files
environment=
gem\:actionmailer-2.1.2=
gem\:actionpack-2.1.2=
gem\:activerecord-2.1.2=
gem\:activeresource-2.1.2=
gem\:activesupport-2.1.2=
gem\:rails-2.1.2=
gem\:rake-0.8.3=
gems=List the gems that this rails application depends on
gems\:base=
gems\:build=Build any native extensions for unpacked gems
gems\:install=Installs all required gems for this application.
gems\:unpack=Unpacks the specified gem into vendor/gems.
gems\:unpack\:dependencies=Unpacks the specified gems and its dependencies into vendor/gems
log\:clear=Truncates all *.log files in log/ to zero bytes
notes=Enumerate all annotations
notes\:fixme=Enumerate all FIXME annotations
notes\:optimize=Enumerate all OPTIMIZE annotations
notes\:todo=Enumerate all TODO annotations
rails\:freeze\:edge=Lock to latest Edge Rails, for a specific release use RELEASE=1.2.0
rails\:freeze\:gems=Lock this application to the current gems (by unpacking them into vendor/rails)
rails\:unfreeze=Unlock this application from freeze of gems or edge and return to a fluid use of system gems
rails\:update=Update both configs, scripts and public/javascripts from Rails
rails\:update\:configs=Update config/boot.rb from your current rails install
rails\:update\:javascripts=Update your javascripts from your current rails install
rails\:update\:scripts=Add new scripts to the application script/ directory
routes=Print out all defined routes in match order, with names.
secret=Generate a crytographically secure secret key. This is typically used to generate a secret for cookie sessions. Pass a unique identifier to the generator using ID="some unique identifier" for greater security.
stats=Report code statistics (KLOCs, etc) from the application
test=Run all unit, functional and integration tests
test\:functionals=Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional
test\:integration=Run tests for integrationdb:test:prepare / Run the integration tests in test/integration
test\:plugins=Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name)
test\:recent=Run tests for recentdb:test:prepare / Test recent changes
test\:uncommitted=Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion)
test\:units=Run tests for unitsdb:test:prepare / Run the unit tests in test/unit
time\:zones\:all=Displays names of all time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6
time\:zones\:local=Displays names of time zones recognized by the Rails TimeZone class with the same offset as the system local time
time\:zones\:us=Displays names of US time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6
tmp=
tmp/war=
tmp/war/404.html=
tmp/war/422.html=
tmp/war/500.html=
tmp/war/WEB-INF=
tmp/war/WEB-INF/app=
tmp/war/WEB-INF/app/controllers=
tmp/war/WEB-INF/app/controllers/application.rb=
tmp/war/WEB-INF/app/helpers=
tmp/war/WEB-INF/app/helpers/application_helper.rb=
tmp/war/WEB-INF/app/models=
tmp/war/WEB-INF/app/views=
tmp/war/WEB-INF/app/views/layouts=
tmp/war/WEB-INF/config=
tmp/war/WEB-INF/config/boot.rb=
tmp/war/WEB-INF/config/database.yml=
tmp/war/WEB-INF/config/environment.rb=
tmp/war/WEB-INF/config/environments=
tmp/war/WEB-INF/config/environments/development.rb=
tmp/war/WEB-INF/config/environments/production.rb=
tmp/war/WEB-INF/config/environments/test.rb=
tmp/war/WEB-INF/config/initializers=
tmp/war/WEB-INF/config/initializers/inflections.rb=
tmp/war/WEB-INF/config/initializers/mime_types.rb=
tmp/war/WEB-INF/config/initializers/new_rails_defaults.rb=
tmp/war/WEB-INF/config/routes.rb=
tmp/war/WEB-INF/gems=
tmp/war/WEB-INF/gems/gems=
tmp/war/WEB-INF/gems/specifications=
tmp/war/WEB-INF/gems/specifications/actionmailer-2.1.2.gemspec=
tmp/war/WEB-INF/gems/specifications/actionpack-2.1.2.gemspec=
tmp/war/WEB-INF/gems/specifications/activerecord-2.1.2.gemspec=
tmp/war/WEB-INF/gems/specifications/activeresource-2.1.2.gemspec=
tmp/war/WEB-INF/gems/specifications/activesupport-2.1.2.gemspec=
tmp/war/WEB-INF/gems/specifications/rails-2.1.2.gemspec=
tmp/war/WEB-INF/gems/specifications/rake-0.8.3.gemspec=
tmp/war/WEB-INF/lib=
tmp/war/WEB-INF/lib/jruby-complete-1.1.4.jar=
tmp/war/WEB-INF/lib/jruby-rack-0.9.2.jar=
tmp/war/WEB-INF/lib/tasks=
tmp/war/WEB-INF/log=
tmp/war/WEB-INF/tmp=
tmp/war/WEB-INF/tmp/cache=
tmp/war/WEB-INF/tmp/pids=
tmp/war/WEB-INF/tmp/sessions=
tmp/war/WEB-INF/tmp/sockets=
tmp/war/WEB-INF/vendor=
tmp/war/WEB-INF/vendor/plugins=
tmp/war/dispatch.cgi=
tmp/war/dispatch.fcgi=
tmp/war/dispatch.rb=
tmp/war/favicon.ico=
tmp/war/images=
tmp/war/images/rails.png=
tmp/war/index.html=
tmp/war/javascripts=
tmp/war/javascripts/application.js=
tmp/war/javascripts/controls.js=
tmp/war/javascripts/dragdrop.js=
tmp/war/javascripts/effects.js=
tmp/war/javascripts/prototype.js=
tmp/war/robots.txt=
tmp/war/stylesheets=
tmp\:cache\:clear=Clears all files and directories in tmp/cache
tmp\:clear=Clear session, cache, and socket files from tmp/
tmp\:create=Creates tmp directories for sessions, cache, and sockets
tmp\:pids\:clear=Clears all files in tmp/pids
tmp\:sessions\:clear=Clears all files in tmp/sessions
tmp\:sockets\:clear=Clears all files in tmp/sockets
war=Create ImageDBJava.war
war\:app=Copy all application files into the .war
war\:clean=Clean up the .war file and the staging area
war\:clear=
war\:debug=
war\:debug\:all=
war\:debug\:app=
war\:debug\:excludes=
war\:debug\:gems=
war\:debug\:includes=
war\:debug\:java_classes=
war\:debug\:java_libs=
war\:debug\:public=
war\:gems=Unpack all gems into WEB-INF/gems
war\:jar=Run the jar command to create the .war
war\:java_classes=Copy java classes into the .war
war\:java_libs=Copy all java libraries into the .war
war\:public=Copy all public HTML files to the root of the .war
war\:webxml=Generate a web.xml file for the webapp
